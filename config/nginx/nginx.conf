user nginx;
worker_processes 2;
pid /var/run/nginx.pid;

events {
    worker_connections 768;
}

http {

    ##
    # Cache Settings
    ##
    proxy_cache_path /var/cache/nginx/proxy_cache levels=1:2 keys_zone=biblers_cache:10m max_size=1G inactive=1w use_temp_path=off;

    ##
    # Basic Settings
    ##
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    #keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # Logging Settings
    ##
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##
    gzip on;
    gzip_disable "msie6";
    gzip_min_length 1100;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json text/xml application/xml text/javascript image/svg+xml;

    ##
    # DDOS Protection
    ##
    client_header_timeout 10;
    client_body_timeout 10;
    keepalive_timeout 10 10;
    send_timeout 10;

    server {
        listen 80;
        listen [::]:80;

        listen 443 default_server ssl http2;
        listen [::]:443 default_server ssl http2;

        server_name bible.rs;
        ssl_certificate /etc/letsencrypt/live/bible.rs/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/bible.rs/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/bible.rs/chain.pem;
        ssl_dhparam /etc/ssl/certs/dhparam.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_protocols TLSv1.3 TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;
        ssl_ecdh_curve secp384r1;

        # HSTS (15768000 seconds = 6 months)
        add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload";

        # OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=60s;
        resolver_timeout 2s;

        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Force HTTPS connection. This rule is domain agnostic
        if ($scheme != "https") {
            rewrite ^ https://$host$uri permanent;
        }

        location / {
            expires 14d;
            add_header pragma public;
            add_header cache-control "public";

            proxy_cache biblers_cache;
            proxy_cache_valid 10m;
            proxy_cache_revalidate on;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update on;
            proxy_cache_lock on;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://app:8080;
        }

        location = /static/js/sw.js {
            expires 1d;
            add_header pragma public;
            add_header cache-control "public";

            proxy_no_cache 1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://app:8080;

            add_header Service-Worker-Allowed /;
        }

        location ^~ /.well-known/acme-challenge/ {
            default_type "text/plain";
            root /var/www/html;
        }

        location = /robots.txt {
            root /var/www/html;
        }

        location = /sitemap.xml {
            root /var/www/html;
        }
}

    server {
        listen 80;
        server_name www.bible.rs;
        return 301 https://bible.rs$request_uri;
    }
}
